<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAIABoBAAAJgAAACAgAAAAACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAEAE
        AAAAAAAAAAAAAAAAAAAAAAAAY2BcFYuDfJ2PioT1l5GM+6Kclvuoo577op6a+5iTj/uGgXz7aWVi+1dW
        VPstJyj7Kigp+1ZSTvWKg3ynYFxaG4yDfJV4enn/c4KI/3WGj/92iZP/fpSf/3GKlv9leYT/ZXV9/2t6
        gv9FTlH/ElZE/y9XTv8nKyv/YmBd/5GKhKd/fHf1anuD/3CCiv9NYWr/O1Fc/z5UYf9pe4T/VV5j/ygx
        Mf8SJSH/DC0j/zaLdP9iwqf/TGth/yIfIP98dnH5jIuI+1ttdf9xhZL/O1lk/yw4Q/8gODr/Hi8s/whD
        M/8DblL/GG9X/xRgS/9Nm4X/VZmG/0JsYf8WGBj/d3Jt+4qJh/tocnn/QFFZ/wRbmv8MdLX/BkJ1/w5C
        S/8Yblv/ep2R/zNbT/88XVP/LVtN/z1eVf9TjX7/Hj83/4iCf/uVko/7SEpK/05SU/8raoL/BX3i/wSU
        8f8Uf8D/Pmpi/yBeTf8bZlD/NHpm/y+Gb/8raFb/MX9s/zZ2ZP+WkY/7r6yq+29vb/9lZGT/QVZV/wtV
        m/8qu/b/dqnS/0KViP8gcVv/B3BV/yqIb/82lnz/N4Zw/0CSfv9RoYz/XoB0+7m2tftJSUn/RkZF/0RK
        S/80Y2n/M5aO/0mom/922cT/SJuD/xV1XP8riW//PZN7/0WTff8wZlf/MHBe/y1vXfu1s7L7Ozs7/zg4
        N/8hISL/ISUm/zNxaf9BloT/UKWO/2O3nv9gspz/Fkc5/wglHP8UPzP/C1tF/xM8Mf9hbWz7TU5R+xsg
        JP80OTn/QkIz/2hkWv+Ldl7/WIN+/zFsYv8PNib/JXlh/2vErP8wjHP/Zreg/z+fhv80hG//q6q8+2Zh
        XvtyYlT/oIln/5+VgP+tnHj/kpOE/0292f8qP6//IHSZ/220nv9vwKj/bcKo/2nCpf9rwqv/KUps/6Om
        y/u1pY77xK57/62lk//Lwpv/uqeA/7yxjf+Skn3/F2Ln/zLe7f9YxLL/TpqL/02aq/8jcLT/FVC//wIR
        k/+VlsL7kJOf+9DPqf+wn3P/h3JW/4+Rhf+4ybf/eaC2/xqr8/8rx/v/V+T8/5Dv+/8ksOf/FU2i/xRt
        zv8JHaf/e3+u+3d9mfU2P1T/gomJ/7fYuf+PysH/ZqW//zF+x/8lld3/MaXq/1/F6P+B3vP/L5/T/yKJ
        wf8tktP/FUfI/292nvmWlJmNO1uf/TBeqf8rWaz/Ily+/wkjg/8WP4j/KorF/0i/4v+a1Ob/MofD/x9N
        gP8eUHf/NWmW/zhjrv+LiY6hua6bDZicqIF0ibbtbIG0+258qPt5gpT7gYuY+5Cot/uXu8v7r8jV+6HC
        0/uZrcL7hpSs+36Rru2hoqeLtKiaEwAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8oAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAA////AUBBQAdVUEolZl1Zh4qDfeGMhX71jYV+9Z+XjvWmnpb1pZ2V9aegmPW1rqj1rqii9Z+Y
        kfWVjYb1mpGL9ZKKgfVya2P1XVdQ9VxVTvVLRUD1PTk19TYzMvUuLCz1MzMz9SwrKvU+Ojf1dm5n42Vf
        WZNRTksxNDIyCf///wGAfn4FZGBcR4R9dMmtpJv9mZOP/42Kh/+Wk4//mpeT/5yZlf+gm5j/o5+b/6Kf
        nP+hn5z/nJuY/5qZlv+XlpT/kI+M/4KBfv94d3X/cnJy/3d8fP9aW1v/LCMj/yYcH/8pJSf/IR4g/yop
        J/9+eHP/rKSc/YeBetdjX1xZampsCWBbViWFfnfJtKuk/3FxcP9LVFn/bnyC/3aFiv9ufIP/aHZ//2t6
        g/9hcXr/ZniC/3SHkv9nfYf/ZXyH/2R2f/9UYmv/Wmtz/2V1fv9wgoz/f5Ka/0ZKTf8SJyH/Gz00/yxB
        QP9SWV3/KSss/yEhIv9eXlz/qaKa/5SNh9lxbGgthH54aZqQh/1kZGP/WGhv/4qcpP+ImqL/fI+Z/3OJ
        lP9/k5//h5+q/5Cqt/+fu8n/d5Wk/3OPnf9nfor/ZHV+/2l4gf99jpb/doOK/2Nscv8yMjX/HSkl/xN5
        YP8GfVz/ClY//zVsXf84RUL/HBkb/zIzM/9QT0z/n5eP/353dJOLhYDbdHFq/1ViaP+Knab/e4uS/2Fw
        eP9YanL/XG12/1VpdP87U2D/OlVj/1dygP96k5//fI6Z/4CRmf9wfoX/VVth/zQ0OP8VFhf/BxEO/wYO
        C/8USTr/GXBZ/xaBZP8um37/ULGW/2SKfv8RFRT/LCor/x8gIf9rZ2L/mJOO75WOiPtqbW3/UGFq/3mK
        k/95jpb/bICJ/1Focf8tRlD/KT5J/zNIU/9CVmH/JDU//05dZP9ibnT/QkhM/yIhI/8RGBT/BiAX/w82
        K/8bOTL/BxwW/w5AMv9Ie2z/Yr+l/37Yvv+K48n/mc68/yM9N/8eFRf/Hh4f/1JOSv+blI35nZaP9Xp+
        fv9ZaXH/Z3eA/22Cjf+NpbD/eZCb/yQ5Q/8nNDz/MTxE/zY/Q/8tNjn/IiYp/xcnJP8JJB3/AzMn/wJb
        Q/8CZ0z/DGZN/x9eTf8XWkf/G2VP/0qCcf+I2cH/i+rO/2jHrf9Poov/OnJi/xMOD/8ZGBn/Uk9L/5iS
        i/WfmZH1eoGB/0tfZ/9hc33/aHmE/2Byhf87YXb/Fjk+/y4/Rv8rMkb/ETdB/ws0Kv8bLin/I0E5/xBF
        Nv8Eb1H/BXpb/wV8Xf8Yh2n/HnBZ/xVeSf8LZEz/FW1V/0ujjP9EgXD/HjQv/zUwMv9Lb2T/GCwm/xYP
        Ef9UUEz/opqT9aKcl/V5f4H/Z3iA/4GQmP9rcnn/KkdV/wFMf/8GbrP/EnSe/xhhg/8JRWH/CEFR/wcw
        Mv8VVEb/H3pl/xR9Yv9WmYX/mLCl/zhzX/8gSz7/OktF/xlKPf8xSkL/HDsw/x1BN/+Id37/maCh/1iZ
        iP8jW0z/BwoK/1hTUP+vqqP1m5aS9XN0c/9aYGX/XWJm/0NITv8oREf/B05u/wBiyf8Ciur/A3DK/wRP
        o/8FNX3/BzNg/xNTVf8aZ1v/FFtJ/2+Ngv+Ln5b/MmBS/0BQSv9beG7/Q2hc/0V+b/8jaVb/F1pH/zln
        Wv8reWT/L4Jr/zpzZP8WIyP/Zl5f/7axrPWkn5z1e3l1/z5BQf9CREX/Q0NG/z1QUf8pY23/DlyV/wSD
        6P8GnPr/A37t/wJ02/8CV73/EFGI/ztwbP88VU7/NExE/yJXR/8lWEj/N3lm/yiCa/8ydmL/I3dh/zp7
        aP8rX1D/L1JE/ydzX/8tbFz/SIp5/yJFPf9qZ2f/wry49bKvrPWGhIL/Q0ND/15fX/9iYF//VlZT/0xt
        cP8rfZb/BVKy/wWE8/8Jqf3/AbP9/xjB+f8llcT/RHt0/z5pW/8cbFj/DmlQ/wdaQf8HbFD/J3Vg/017
        bP8zlHv/LJJ4/yhwXP8ogWf/NI14/z2QfP9Ko4n/JGRS/2VkYv/Kwr/1wL279ZiVk/9qamr/hISE/3Jy
        c/9jXl//T1FM/zZwbf8SU4L/AFbB/wWn+/8ix///i8n4/2yOuv85in//KnNm/zV7af8Tf2L/A2lO/wBm
        S/8igWj/LYdv/y2Uef8mknb/Kn9p/x1rVf8ojHP/L35t/0mpkf88h3P/OGtb/6yin/XHxMH1oJ2b/2Bg
        YP9tbW3/ZmVl/1paW/9JS0v/OExR/xdMdf8EYLT/Da7q/3XR9v+FrOP/Xp+y/166qv9In5D/IltL/xRu
        Vf8QfGH/C3VZ/x6Jbf88jXf/Oo95/0miiv9dq5X/N4Jt/0WWf/9kqJv/XKeU/2Gtl/8vfmf/a3Vu9c7K
        yfWgnZv/SkpK/1FRUf9FRET/RERD/z1BQf87TVL/LlNk/ymAjv8hl5r/VbCx/2e+wv9318T/gubT/3ne
        yf8/k3z/C1I9/xh6YP8ciW3/GYZp/z+Wff9Fl4D/RJR9/02ag/9Vspn/VauU/0aKdv89knr/T7CW/y2G
        b/9DY1b10tDP9aelo/9MTEv/Pz8//0NDQ/9LTEz/S0tL/0tQUP9CVFP/OGVd/zOIdv8jiXf/GnZl/y2V
        gP9bxLD/g93E/43nzP9LoIj/EGJM/xFuVv8ffWT/NYty/zmVfP8zjHT/O4Nu/zZ8af8fTED/BxgT/w0n
        Hv8nV0j/HmxZ/yhpWPXX1dP1qKal/0NDQ/9OTk7/VVZW/01NTf89Pj3/Jycn/xcaGv8QGiD/NGhm/xyP
        eP8nem3/KoBt/z+iiv9lvab/YLee/4/rz/900Lb/IGBN/wUwIv8AIxn/BxwV/xAoIP8hNS7/ChwV/wEq
        Hf8CRDH/AyQa/yIhH/9ETEz/SWtj9c3MyfWJiYn/KCko/zExMf8lJiX/GBcW/w8OD/8QExT/HB8f/0E/
        Qf9DSlL/OoN1/1ezn/9bq5X/WJ+K/0aXf/9Fm4P/V56J/3rKtP9x0Lf/RZeC/xAyJ/8AEw3/CDst/xZU
        Q/8QWEX/Enhd/xaHaf8XfWH/Dy8r/1BTX/+rq6b1mpmY9TM1OP8OEBP/FhYX/woOEv8eIiH/Ozco/0JA
        Mv81QEL/hH96/25gVP+Xgmj/eqCA/1Wpj/9An4L/J2xR/xtCNf8IGBH/G1FA/1e3nP+Q6ND/W66X/xFc
        Rv8UdFr/VaWO/1yhjf8ri3L/LpZ6/zKfgP8QST7/dnWT/+bg3/ViY2T1CgsT/xUfKf81PD3/aGVe/z9O
        U/8/QDH/S05B/1BUT/+Yflv/tJNq/3FiU/9YRUb/O4Ci/zp0gv8hMDL/AyYP/xdXRf8QZE7/E3dc/0en
        jv9407r/Wbuh/0GnjP940bj/cMSt/0SgiP9fu6T/acur/yRdVf9xdKL/5eHg9XBvcPUTEA3/LCko/11d
        YP+iim//fnBa/29vav+xr53/ppmE/5l4Sf+agF3/W4qf/xmc2/8YlM//RE50/xshu/8NUJb/LpFt/2Ks
        lv9hvaX/Yryj/4DWvP+K3MT/YrOd/1evl/9mw6j/bMmt/37ct/9ww6r/EidZ/293u//f3Nf1jo2N9Yp9
        cf+pi27/lXZY/6qQbf+2mmj/mH9d/8K2m//CtY3/taqG/5yGZ/+2vK3/sPzo/1HK0P88Z6P/Dibo/wxU
        3/83nYP/c7GV/4C3pv9ytaH/arig/2e+pf9huJv/YbiY/4Tdv/9pvJ//Wqep/yM5Wv8ABFH/bHfR/9bS
        y/Won5j1rph+/5l/Xv+tl2n/vben/5OIcv+8rYP/xsCS/8utef/U0Kr/qaGD/8jFp/++r3b/qKyh/y1H
        2v8GQez/D7D1/17Zyv9uwKP/UpiA/zFyXv9ZlXv/csKk/2GynP81i6X/QK3P/yFro/8QJbP/AQmE/wAE
        Xv9mb8r/zcjA9aeiovXWuYD/2rx4//DlrP/Wz7f/jYZ9/8zHrf/d1qj/sZdt/5iHb/+0r5b/za9z/3lo
        Qv9ohJz/HFjr/w2m7f8Y9fr/RPv6/1Du6P9RyLz/V5+K/1fCyv9Cn8T/HlWp/wcsmP8QXcP/F3Da/ws/
        zP8IK8//AAqa/19nx//Fvrb1n5iW9auwr//n5q3/8umr/+/il/+ijWr/bVtJ/35kTv9zZV7/dYR7/9Hi
        0f/Eu5z/trih/0mAvf8Tn/D/Hsr8/zDb/f8s2Pz/L+X9/3L1/v/P/f7/P+P8/xW29v8TbtL/Dh18/wYW
        fP8OULr/FnvW/wwjsf8BD6P/VGLL/7OroPWYkIn3YHSt/4qVmP/d2Lb/u6h+/3VnTP+IeV//qY5i/7Cv
        p/+lrpb/orqv/6nMv/+u17j/NXPF/xeP5v8fsvn/H7H6/zO5+P8+zfr/fOv8/7ny+/956vj/RuTz/yC4
        3/8gjs//HnLB/xZ1zv8Wctr/ESSm/wQeo/9MXsP/npSJ9ZSLhPlecar/Ljpa/1lXUf+Rj4b/wLmY/8jQ
        rf/Czqz/tNPF/46zsf98t67/jNLK/1ybwf8sf9H/I4nd/x2R5f8mpPD/Ra7t/0nG8f+N4vT/leP4/4vv
        9v9NyOP/HqHV/yCcyf8om8z/JZLR/ySB0/8XSMz/CT7I/0ldvf+UiX73lIyG211wrP8kNGL/KzVF/zJB
        av+EnJ7/rNq9/6Xp0P+M1sH/b83N/2i+0f8mTrP/EkO2/yqc1f8ystn/I4bZ/yaX6f8zquT/Q7fg/2Kz
        2v+B3/X/Zcbo/y6Kxf8jh83/Gmaw/yeHvv83qtf/NIvP/yBNvv8WSsz/UGq8/5GIfu+elYtlgYah+yZO
        qP80SHL/Sm2f/yxTmv9Mhbn/SYu3/0ucvP81gsn/Dzam/wkhlv8UOJX/IGat/y+Sxv8uldb/JaDd/2bU
        5/941OT/hK/T/0OPyv8eYKj/GDt1/yVllv8kaZn/Jl+L/0GCq/9Ad6T/JEmb/ypjxv9ueZb9j4V+kbeu
        mR2ropa3a32s+ylYtf8wcbr/G0aw/xExnv8HI6L/BjLJ/wIgqv8EEW3/CSJi/wwmYv8XN3v/JWqs/yaY
        zf8ns93/bdfo/7Lv8v+44O//QajW/yWDxf8bRX//JU94/xxMa/8SK0z/JElz/zBhlv8sYK7/Z36r/6SZ
        j820qJUlysrFA7mtmS+rpaCjfIur9Udyvf81Yr//LFu7/ytXvv8tUrb/NVCd/zxTgf9CV3f/RVp3/01q
        if9XhKn/XJy//1mpzv9ntNT/isPb/5LG3v9uu9n/Za3U/2GVwv9Zga7/THCe/0Vjlf9AZp3/UHux/4eU
        rPeto5u3s6eXQcTBwAX///8Bnp6aA8G5qBe6s6xXt7Gxv7Cpq/Wuqqz1says9aynpPWxrKn1tbCu9bex
        rvW6s7D1vbiz9cS+t/XNxL710cbC9dHJyPXPy8z1087Q9dnQ0PXa0tD12NLO9dXOy/XKw8H1wb689by3
        tvW8uLXDw7yzX82+qRukoqAF////AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>